

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
<<<<<<< Updated upstream
                                                                                               Sun Jul 30 10:20:52 2017
=======
                                                                                               Sun Jul 30 10:31:58 2017
>>>>>>> Stashed changes

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.42
    25                           ; Generated 13/04/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F18345 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0097                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  018E                     	;# 
   122  0197                     	;# 
   123  0199                     	;# 
   124  0199                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019A                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019C                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019D                     	;# 
   139  019D                     	;# 
   140  019E                     	;# 
   141  019E                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  020E                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0219                     	;# 
   168  021A                     	;# 
   169  021B                     	;# 
   170  021C                     	;# 
   171  021D                     	;# 
   172  021D                     	;# 
   173  021E                     	;# 
   174  021F                     	;# 
   175  028C                     	;# 
   176  028D                     	;# 
   177  028E                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0297                     	;# 
   187  0298                     	;# 
   188  029F                     	;# 
   189  030C                     	;# 
   190  030D                     	;# 
   191  030E                     	;# 
   192  0311                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0314                     	;# 
   197  0315                     	;# 
   198  0315                     	;# 
   199  0316                     	;# 
   200  0317                     	;# 
   201  0318                     	;# 
   202  038C                     	;# 
   203  038D                     	;# 
   204  038E                     	;# 
   205  0391                     	;# 
   206  0392                     	;# 
   207  0393                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  0397                     	;# 
   212  0398                     	;# 
   213  0399                     	;# 
   214  039A                     	;# 
   215  039C                     	;# 
   216  039D                     	;# 
   217  039E                     	;# 
   218  039F                     	;# 
   219  0411                     	;# 
   220  0411                     	;# 
   221  0412                     	;# 
   222  0413                     	;# 
   223  0414                     	;# 
   224  0415                     	;# 
   225  0416                     	;# 
   226  0417                     	;# 
   227  0418                     	;# 
   228  0418                     	;# 
   229  0419                     	;# 
   230  041A                     	;# 
   231  041B                     	;# 
   232  041C                     	;# 
   233  041D                     	;# 
   234  041E                     	;# 
   235  041F                     	;# 
   236  0498                     	;# 
   237  0498                     	;# 
   238  0499                     	;# 
   239  049A                     	;# 
   240  049B                     	;# 
   241  049B                     	;# 
   242  049C                     	;# 
   243  049D                     	;# 
   244  049E                     	;# 
   245  049F                     	;# 
   246  0617                     	;# 
   247  0618                     	;# 
   248  0619                     	;# 
   249  0619                     	;# 
   250  061A                     	;# 
   251  061B                     	;# 
   252  061C                     	;# 
   253  061C                     	;# 
   254  061F                     	;# 
   255  0691                     	;# 
   256  0692                     	;# 
   257  0693                     	;# 
   258  0694                     	;# 
   259  0695                     	;# 
   260  0696                     	;# 
   261  0697                     	;# 
   262  0698                     	;# 
   263  0699                     	;# 
   264  0711                     	;# 
   265  0712                     	;# 
   266  0713                     	;# 
   267  0714                     	;# 
   268  0715                     	;# 
   269  0716                     	;# 
   270  0717                     	;# 
   271  0718                     	;# 
   272  0719                     	;# 
   273  0891                     	;# 
   274  0891                     	;# 
   275  0891                     	;# 
   276  0891                     	;# 
   277  0891                     	;# 
   278  0891                     	;# 
   279  0892                     	;# 
   280  0892                     	;# 
   281  0892                     	;# 
   282  0893                     	;# 
   283  0893                     	;# 
   284  0893                     	;# 
   285  0893                     	;# 
   286  0893                     	;# 
   287  0893                     	;# 
   288  0894                     	;# 
   289  0894                     	;# 
   290  0894                     	;# 
   291  0895                     	;# 
   292  0895                     	;# 
   293  0895                     	;# 
   294  0896                     	;# 
   295  0896                     	;# 
   296  0896                     	;# 
   297  089B                     	;# 
   298  0911                     	;# 
   299  0912                     	;# 
   300  0913                     	;# 
   301  0914                     	;# 
   302  0915                     	;# 
   303  0916                     	;# 
   304  0918                     	;# 
   305  0919                     	;# 
   306  091A                     	;# 
   307  091B                     	;# 
   308  091C                     	;# 
   309  091D                     	;# 
   310  091E                     	;# 
   311  091F                     	;# 
   312  0E0F                     	;# 
   313  0E10                     	;# 
   314  0E11                     	;# 
   315  0E12                     	;# 
   316  0E13                     	;# 
   317  0E14                     	;# 
   318  0E15                     	;# 
   319  0E16                     	;# 
   320  0E17                     	;# 
   321  0E18                     	;# 
   322  0E19                     	;# 
   323  0E1A                     	;# 
   324  0E1B                     	;# 
   325  0E1C                     	;# 
   326  0E1D                     	;# 
   327  0E1E                     	;# 
   328  0E1F                     	;# 
   329  0E20                     	;# 
   330  0E21                     	;# 
   331  0E22                     	;# 
   332  0E24                     	;# 
   333  0E25                     	;# 
   334  0E28                     	;# 
   335  0E29                     	;# 
   336  0E2A                     	;# 
   337  0E2B                     	;# 
   338  0E2C                     	;# 
   339  0E2D                     	;# 
   340  0E2E                     	;# 
   341  0E2F                     	;# 
   342  0E90                     	;# 
   343  0E91                     	;# 
   344  0E92                     	;# 
   345  0E94                     	;# 
   346  0E95                     	;# 
   347  0E9C                     	;# 
   348  0E9D                     	;# 
   349  0E9E                     	;# 
   350  0E9F                     	;# 
   351  0EA0                     	;# 
   352  0EA1                     	;# 
   353  0EA2                     	;# 
   354  0EA3                     	;# 
   355  0EA4                     	;# 
   356  0EA5                     	;# 
   357  0EA6                     	;# 
   358  0EA7                     	;# 
   359  0F0F                     	;# 
   360  0F10                     	;# 
   361  0F11                     	;# 
   362  0F12                     	;# 
   363  0F13                     	;# 
   364  0F14                     	;# 
   365  0F15                     	;# 
   366  0F16                     	;# 
   367  0F17                     	;# 
   368  0F18                     	;# 
   369  0F19                     	;# 
   370  0F1A                     	;# 
   371  0F1B                     	;# 
   372  0F1C                     	;# 
   373  0F1D                     	;# 
   374  0F1E                     	;# 
   375  0F1F                     	;# 
   376  0F20                     	;# 
   377  0F21                     	;# 
   378  0F22                     	;# 
   379  0F23                     	;# 
   380  0F24                     	;# 
   381  0F25                     	;# 
   382  0F26                     	;# 
   383  0F27                     	;# 
   384  0F28                     	;# 
   385  0F29                     	;# 
   386  0F2A                     	;# 
   387  0F2B                     	;# 
   388  0F2C                     	;# 
   389  0F2D                     	;# 
   390  0F2E                     	;# 
   391  0F2F                     	;# 
   392  0F30                     	;# 
   393  0F31                     	;# 
   394  0F32                     	;# 
   395  0F33                     	;# 
   396  0F34                     	;# 
   397  0F35                     	;# 
   398  0F36                     	;# 
   399  0F37                     	;# 
   400  0FE4                     	;# 
   401  0FE5                     	;# 
   402  0FE6                     	;# 
   403  0FE7                     	;# 
   404  0FE8                     	;# 
   405  0FE9                     	;# 
   406  0FEA                     	;# 
   407  0FEB                     	;# 
   408  0FED                     	;# 
   409  0FEE                     	;# 
   410  0FEF                     	;# 
   411  006D                     _RB5	set	109
   412  006E                     _RB6	set	110
   413  0077                     _RC7	set	119
   414  0076                     _RC6	set	118
   415  0075                     _RC5	set	117
   416  0074                     _RC4	set	116
   417  008E                     _TRISC	set	142
   418  008D                     _TRISB	set	141
   419  0C6E                     _ANSB6	set	3182
   420  0C6D                     _ANSB5	set	3181
   421  0C77                     _ANSC7	set	3191
   422  0C76                     _ANSC6	set	3190
   423  0C75                     _ANSC5	set	3189
   424  0C74                     _ANSC4	set	3188
   425                           
   426                           	psect	stringtext1
   427  0800                     __pstringtext1:	
   428  0800                     STR_5:	
   429  0800  3477               	retlw	119	;'w'
   430  0801  3477               	retlw	119	;'w'
   431  0802  3477               	retlw	119	;'w'
   432  0803  342E               	retlw	46	;'.'
   433  0804  3465               	retlw	101	;'e'
   434  0805  346C               	retlw	108	;'l'
   435  0806  3465               	retlw	101	;'e'
   436  0807  3463               	retlw	99	;'c'
   437  0808  3474               	retlw	116	;'t'
   438  0809  3472               	retlw	114	;'r'
   439  080A  346F               	retlw	111	;'o'
   440  080B  3453               	retlw	83	;'S'
   441  080C  346F               	retlw	111	;'o'
   442  080D  346D               	retlw	109	;'m'
   443  080E  3465               	retlw	101	;'e'
   444  080F  342E               	retlw	46	;'.'
   445  0810  3463               	retlw	99	;'c'
   446  0811  346F               	retlw	111	;'o'
   447  0812  346D               	retlw	109	;'m'
   448  0813  3400               	retlw	0
   449                           
   450                           	psect	stringtext2
   451  0814                     __pstringtext2:	
   452  0814                     STR_1:	
   453  0814  3450               	retlw	80	;'P'
   454  0815  3472               	retlw	114	;'r'
   455  0816  346F               	retlw	111	;'o'
   456  0817  3467               	retlw	103	;'g'
   457  0818  3472               	retlw	114	;'r'
   458  0819  3461               	retlw	97	;'a'
   459  081A  346D               	retlw	109	;'m'
   460  081B  3420               	retlw	32	;' '
   461  081C  3473               	retlw	115	;'s'
   462  081D  3474               	retlw	116	;'t'
   463  081E  3461               	retlw	97	;'a'
   464  081F  3472               	retlw	114	;'r'
   465  0820  3474               	retlw	116	;'t'
   466  0821  3469               	retlw	105	;'i'
   467  0822  346E               	retlw	110	;'n'
   468  0823  3467               	retlw	103	;'g'
   469  0824  3400               	retlw	0
   470                           
   471                           	psect	stringtext3
   472  0825                     __pstringtext3:	
   473  0825                     STR_3:	
   474  0825  3444               	retlw	68	;'D'
   475  0826  3465               	retlw	101	;'e'
   476  0827  3476               	retlw	118	;'v'
   477  0828  3465               	retlw	101	;'e'
   478  0829  346C               	retlw	108	;'l'
   479  082A  346F               	retlw	111	;'o'
   480  082B  3470               	retlw	112	;'p'
   481  082C  3465               	retlw	101	;'e'
   482  082D  3464               	retlw	100	;'d'
   483  082E  3420               	retlw	32	;' '
   484  082F  3442               	retlw	66	;'B'
   485  0830  3479               	retlw	121	;'y'
   486  0831  3400               	retlw	0
   487                           
   488                           	psect	stringtext4
   489  0832                     __pstringtext4:	
   490  0832                     STR_4:	
   491  0832  3465               	retlw	101	;'e'
   492  0833  346C               	retlw	108	;'l'
   493  0834  3465               	retlw	101	;'e'
   494  0835  3463               	retlw	99	;'c'
   495  0836  3474               	retlw	116	;'t'
   496  0837  3472               	retlw	114	;'r'
   497  0838  346F               	retlw	111	;'o'
   498  0839  3453               	retlw	83	;'S'
   499  083A  346F               	retlw	111	;'o'
   500  083B  346D               	retlw	109	;'m'
   501  083C  3465               	retlw	101	;'e'
   502  083D  3400               	retlw	0
   503                           
   504                           	psect	stringtext5
   505  083E                     __pstringtext5:	
   506  083E                     STR_2:	
   507  083E  342E               	retlw	46	;'.'
   508  083F  342E               	retlw	46	;'.'
   509  0840  342E               	retlw	46	;'.'
   510  0841  3400               	retlw	0
   511                           
   512                           	psect	stringtext6
   513  0000                     __pstringtext6:	
   514                           
   515                           ; #config settings
   516  0000                     
   517                           	psect	cinit
   518  07FD                     start_initialization:	
   519  07FD                     __initialization:	
   520  07FD                     end_of_initialization:	
   521                           ;End of C runtime variable initialization code
   522                           
   523  07FD                     __end_of__initialization:	
   524  07FD  0020               	movlb	0
   525  07FE  3187  2F28         	ljmp	_main	;jump to C main() function
   526                           
   527                           	psect	cstackCOMMON
   528  0070                     __pcstackCOMMON:	
   529  0070                     ?_Lcd_Port:	
   530  0070                     ??_Lcd_Port:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_Lcd_Cmd:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_Lcd_Init:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_Lcd_Write_Char:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_Lcd_Shift_Right:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_Lcd_Shift_Left:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Lcd_Clear:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_main:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     Lcd_Port@a:	
   555                           ; 2 bytes @ 0x0
   556                           
   557                           
   558                           ; 1 bytes @ 0x0
   559  0070                     	ds	1
   560  0071                     ??_Lcd_Cmd:	
   561  0071                     ??_Lcd_Write_Char:	
   562                           ; 1 bytes @ 0x1
   563                           
   564                           
   565                           ; 1 bytes @ 0x1
   566  0071                     	ds	1
   567  0072                     Lcd_Cmd@a:	
   568  0072                     Lcd_Write_Char@temp:	
   569                           ; 1 bytes @ 0x2
   570                           
   571                           
   572                           ; 1 bytes @ 0x2
   573  0072                     	ds	1
   574  0073                     ??_Lcd_Clear:	
   575  0073                     ?_Lcd_Set_Cursor:	
   576                           ; 1 bytes @ 0x3
   577                           
   578  0073                     ??_Lcd_Init:	
   579                           ; 1 bytes @ 0x3
   580                           
   581  0073                     ??_Lcd_Shift_Right:	
   582                           ; 1 bytes @ 0x3
   583                           
   584  0073                     ??_Lcd_Shift_Left:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     Lcd_Set_Cursor@b:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     Lcd_Write_Char@y:	
   591                           ; 1 bytes @ 0x3
   592                           
   593                           
   594                           ; 1 bytes @ 0x3
   595  0073                     	ds	1
   596  0074                     ??_Lcd_Set_Cursor:	
   597  0074                     Lcd_Write_Char@a:	
   598                           ; 1 bytes @ 0x4
   599                           
   600                           
   601                           ; 1 bytes @ 0x4
   602  0074                     	ds	1
   603  0075                     ?_Lcd_Write_String:	
   604  0075                     Lcd_Write_String@a:	
   605                           ; 1 bytes @ 0x5
   606                           
   607                           
   608                           ; 2 bytes @ 0x5
   609  0075                     	ds	1
   610  0076                     Lcd_Set_Cursor@a:	
   611                           
   612                           ; 1 bytes @ 0x6
   613  0076                     	ds	1
   614  0077                     ??_Lcd_Write_String:	
   615  0077                     Lcd_Set_Cursor@z:	
   616                           ; 1 bytes @ 0x7
   617                           
   618                           
   619                           ; 1 bytes @ 0x7
   620  0077                     	ds	1
   621  0078                     Lcd_Set_Cursor@y:	
   622  0078                     Lcd_Write_String@i:	
   623                           ; 1 bytes @ 0x8
   624                           
   625                           
   626                           ; 2 bytes @ 0x8
   627  0078                     	ds	1
   628  0079                     Lcd_Set_Cursor@temp:	
   629                           
   630                           ; 1 bytes @ 0x9
   631  0079                     	ds	1
   632  007A                     ??_main:	
   633                           
   634                           ; 1 bytes @ 0xA
   635  007A                     	ds	2
   636  007C                     main@a:	
   637                           
   638                           ; 2 bytes @ 0xC
   639  007C                     	ds	2
   640                           
   641                           	psect	maintext
   642  0728                     __pmaintext:	
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   645 ;;
   646 ;; *************** function _main *****************
   647 ;; Defined at:
   648 ;;		line 42 in file "sources/main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  a               2   12[COMMON] unsigned int 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  2   75[None  ] int 
   655 ;; Registers used:
   656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : B1F/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   666 ;;Total ram usage:        4 bytes
   667 ;; Hardware stack levels required when called:    3
   668 ;; This function calls:
   669 ;;		_Lcd_Clear
   670 ;;		_Lcd_Init
   671 ;;		_Lcd_Set_Cursor
   672 ;;		_Lcd_Shift_Left
   673 ;;		_Lcd_Shift_Right
   674 ;;		_Lcd_Write_Char
   675 ;;		_Lcd_Write_String
   676 ;; This function is called by:
   677 ;;		Startup code after reset
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _main
   683  0728                     _main:	
   684                           
   685                           ;main.c: 44: unsigned int a;
   686                           ;main.c: 45: TRISB = 0x00;
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   690  0728  0021               	movlb	1	; select bank1
   691  0729  018D               	clrf	13	;volatile
   692                           
   693                           ;main.c: 46: ANSC4 = 0;
   694  072A  0023               	movlb	3	; select bank3
   695  072B  120E               	bcf	14,4	;volatile
   696                           
   697                           ;main.c: 47: ANSC5 = 0;
   698  072C  128E               	bcf	14,5	;volatile
   699                           
   700                           ;main.c: 48: ANSC6 = 0;
   701  072D  130E               	bcf	14,6	;volatile
   702                           
   703                           ;main.c: 49: ANSC7 = 0;
   704  072E  138E               	bcf	14,7	;volatile
   705                           
   706                           ;main.c: 50: TRISC = 0x00;
   707  072F  0021               	movlb	1	; select bank1
   708  0730  018E               	clrf	14	;volatile
   709                           
   710                           ;main.c: 51: ANSB5 = 0;
   711  0731  0023               	movlb	3	; select bank3
   712  0732  128D               	bcf	13,5	;volatile
   713                           
   714                           ;main.c: 52: ANSB6 = 0;
   715  0733  130D               	bcf	13,6	;volatile
   716                           
   717                           ;main.c: 54: Lcd_Init();
   718  0734  3186  26E4  3187   	fcall	_Lcd_Init
   719  0737                     l753:	
   720                           ;main.c: 55: while(1)
   721                           
   722                           
   723                           ;main.c: 56: {
   724                           ;main.c: 57: Lcd_Clear();
   725  0737  3186  261A  3187   	fcall	_Lcd_Clear
   726                           
   727                           ;main.c: 58: Lcd_Set_Cursor(1,1);
   728  073A  01F3               	clrf	Lcd_Set_Cursor@b
   729  073B  0AF3               	incf	Lcd_Set_Cursor@b,f
   730  073C  3001               	movlw	1
   731  073D  3186  26A4  3187   	fcall	_Lcd_Set_Cursor
   732                           
   733                           ;main.c: 59: Lcd_Write_String("Program starting");
   734  0740  3014               	movlw	low (STR_1| (0+32768))
   735  0741  00F5               	movwf	Lcd_Write_String@a
   736  0742  3088               	movlw	high (STR_1| (0+32768))
   737  0743  00F6               	movwf	Lcd_Write_String@a+1
   738  0744  3186  265E  3187   	fcall	_Lcd_Write_String
   739                           
   740                           ;main.c: 60: Lcd_Set_Cursor(2,1);
   741  0747  01F3               	clrf	Lcd_Set_Cursor@b
   742  0748  0AF3               	incf	Lcd_Set_Cursor@b,f
   743  0749  3002               	movlw	2
   744  074A  3186  26A4  3187   	fcall	_Lcd_Set_Cursor
   745                           
   746                           ;main.c: 61: Lcd_Write_String("...");
   747  074D  303E               	movlw	low (STR_2| (0+32768))
   748  074E  00F5               	movwf	Lcd_Write_String@a
   749  074F  3088               	movlw	high (STR_2| (0+32768))
   750  0750  00F6               	movwf	Lcd_Write_String@a+1
   751  0751  3186  265E  3187   	fcall	_Lcd_Write_String
   752                           
   753                           ;main.c: 62: _delay((unsigned long)((2000)*(16000000/4000.0)));
   754  0754  3029               	movlw	41
   755  0755  00FB               	movwf	??_main+1
   756  0756  3096               	movlw	150
   757  0757  00FA               	movwf	??_main
   758  0758  307F               	movlw	127
   759  0759                     u247:	
   760  0759  0B89               	decfsz	9,f
   761  075A  2F59               	goto	u247
   762  075B  0BFA               	decfsz	??_main,f
   763  075C  2F59               	goto	u247
   764  075D  0BFB               	decfsz	??_main+1,f
   765  075E  2F59               	goto	u247
   766  075F  0000               	nop
   767                           
   768                           ;main.c: 63: Lcd_Clear();
   769  0760  3186  261A  3187   	fcall	_Lcd_Clear
   770                           
   771                           ;main.c: 64: Lcd_Set_Cursor(1,1);
   772  0763  01F3               	clrf	Lcd_Set_Cursor@b
   773  0764  0AF3               	incf	Lcd_Set_Cursor@b,f
   774  0765  3001               	movlw	1
   775  0766  3186  26A4  3187   	fcall	_Lcd_Set_Cursor
   776                           
   777                           ;main.c: 65: Lcd_Write_String("Developed By");
   778  0769  3025               	movlw	low (STR_3| (0+32768))
   779  076A  00F5               	movwf	Lcd_Write_String@a
   780  076B  3088               	movlw	high (STR_3| (0+32768))
   781  076C  00F6               	movwf	Lcd_Write_String@a+1
   782  076D  3186  265E  3187   	fcall	_Lcd_Write_String
   783                           
   784                           ;main.c: 66: Lcd_Set_Cursor(2,1);
   785  0770  01F3               	clrf	Lcd_Set_Cursor@b
   786  0771  0AF3               	incf	Lcd_Set_Cursor@b,f
   787  0772  3002               	movlw	2
   788  0773  3186  26A4  3187   	fcall	_Lcd_Set_Cursor
   789                           
   790                           ;main.c: 67: Lcd_Write_String("electroSome");
   791  0776  3032               	movlw	low (STR_4| (0+32768))
   792  0777  00F5               	movwf	Lcd_Write_String@a
   793  0778  3088               	movlw	high (STR_4| (0+32768))
   794  0779  00F6               	movwf	Lcd_Write_String@a+1
   795  077A  3186  265E  3187   	fcall	_Lcd_Write_String
   796                           
   797                           ;main.c: 68: _delay((unsigned long)((2000)*(16000000/4000.0)));
   798  077D  3029               	movlw	41
   799  077E  00FB               	movwf	??_main+1
   800  077F  3096               	movlw	150
   801  0780  00FA               	movwf	??_main
   802  0781  307F               	movlw	127
   803  0782                     u257:	
   804  0782  0B89               	decfsz	9,f
   805  0783  2F82               	goto	u257
   806  0784  0BFA               	decfsz	??_main,f
   807  0785  2F82               	goto	u257
   808  0786  0BFB               	decfsz	??_main+1,f
   809  0787  2F82               	goto	u257
   810  0788  0000               	nop
   811                           
   812                           ;main.c: 69: Lcd_Clear();
   813  0789  3186  261A  3187   	fcall	_Lcd_Clear
   814                           
   815                           ;main.c: 70: Lcd_Set_Cursor(1,1);
   816  078C  01F3               	clrf	Lcd_Set_Cursor@b
   817  078D  0AF3               	incf	Lcd_Set_Cursor@b,f
   818  078E  3001               	movlw	1
   819  078F  3186  26A4  3187   	fcall	_Lcd_Set_Cursor
   820                           
   821                           ;main.c: 71: Lcd_Write_String("www.electroSome.com");
   822  0792  3000               	movlw	low (STR_5| (0+32768))
   823  0793  00F5               	movwf	Lcd_Write_String@a
   824  0794  3088               	movlw	high (STR_5| (0+32768))
   825  0795  00F6               	movwf	Lcd_Write_String@a+1
   826  0796  3186  265E  3187   	fcall	_Lcd_Write_String
   827                           
   828                           ;main.c: 73: for(a=0;a<15;a++)
   829  0799  01FC               	clrf	main@a
   830  079A  01FD               	clrf	main@a+1
   831  079B  3000               	movlw	0
   832  079C  027D               	subwf	main@a+1,w
   833  079D  300F               	movlw	15
   834  079E  1903               	skipnz
   835  079F  027C               	subwf	main@a,w
   836  07A0  1803               	btfsc	3,0
   837  07A1  2FBC               	goto	l797
   838  07A2                     l789:	
   839                           
   840                           ;main.c: 74: {
   841                           ;main.c: 75: _delay((unsigned long)((300)*(16000000/4000.0)));
   842  07A2  3007               	movlw	7
   843  07A3  00FB               	movwf	??_main+1
   844  07A4  3017               	movlw	23
   845  07A5  00FA               	movwf	??_main
   846  07A6  306A               	movlw	106
   847  07A7                     u267:	
   848  07A7  0B89               	decfsz	9,f
   849  07A8  2FA7               	goto	u267
   850  07A9  0BFA               	decfsz	??_main,f
   851  07AA  2FA7               	goto	u267
   852  07AB  0BFB               	decfsz	??_main+1,f
   853  07AC  2FA7               	goto	u267
   854  07AD  3200               	nop2
   855                           
   856                           ;main.c: 76: Lcd_Shift_Left();
   857  07AE  3186  2622  3187   	fcall	_Lcd_Shift_Left
   858  07B1  3001               	movlw	1
   859  07B2  07FC               	addwf	main@a,f
   860  07B3  3000               	movlw	0
   861  07B4  3DFD               	addwfc	main@a+1,f
   862  07B5  3000               	movlw	0
   863  07B6  027D               	subwf	main@a+1,w
   864  07B7  300F               	movlw	15
   865  07B8  1903               	skipnz
   866  07B9  027C               	subwf	main@a,w
   867  07BA  1C03               	skipc
   868  07BB  2FA2               	goto	l789
   869  07BC                     l797:	
   870                           
   871                           ;main.c: 77: }
   872                           ;main.c: 79: for(a=0;a<15;a++)
   873  07BC  01FC               	clrf	main@a
   874  07BD  01FD               	clrf	main@a+1
   875  07BE  3000               	movlw	0
   876  07BF  027D               	subwf	main@a+1,w
   877  07C0  300F               	movlw	15
   878  07C1  1903               	skipnz
   879  07C2  027C               	subwf	main@a,w
   880  07C3  1803               	btfsc	3,0
   881  07C4  2FDF               	goto	l811
   882  07C5                     l803:	
   883                           
   884                           ;main.c: 80: {
   885                           ;main.c: 81: _delay((unsigned long)((300)*(16000000/4000.0)));
   886  07C5  3007               	movlw	7
   887  07C6  00FB               	movwf	??_main+1
   888  07C7  3017               	movlw	23
   889  07C8  00FA               	movwf	??_main
   890  07C9  306A               	movlw	106
   891  07CA                     u277:	
   892  07CA  0B89               	decfsz	9,f
   893  07CB  2FCA               	goto	u277
   894  07CC  0BFA               	decfsz	??_main,f
   895  07CD  2FCA               	goto	u277
   896  07CE  0BFB               	decfsz	??_main+1,f
   897  07CF  2FCA               	goto	u277
   898  07D0  3200               	nop2
   899                           
   900                           ;main.c: 82: Lcd_Shift_Right();
   901  07D1  3186  262A  3187   	fcall	_Lcd_Shift_Right
   902  07D4  3001               	movlw	1
   903  07D5  07FC               	addwf	main@a,f
   904  07D6  3000               	movlw	0
   905  07D7  3DFD               	addwfc	main@a+1,f
   906  07D8  3000               	movlw	0
   907  07D9  027D               	subwf	main@a+1,w
   908  07DA  300F               	movlw	15
   909  07DB  1903               	skipnz
   910  07DC  027C               	subwf	main@a,w
   911  07DD  1C03               	skipc
   912  07DE  2FC5               	goto	l803
   913  07DF                     l811:	
   914                           
   915                           ;main.c: 83: }
   916                           ;main.c: 85: Lcd_Clear();
   917  07DF  3186  261A  3187   	fcall	_Lcd_Clear
   918                           
   919                           ;main.c: 86: Lcd_Set_Cursor(2,1);
   920  07E2  01F3               	clrf	Lcd_Set_Cursor@b
   921  07E3  0AF3               	incf	Lcd_Set_Cursor@b,f
   922  07E4  3002               	movlw	2
   923  07E5  3186  26A4  3187   	fcall	_Lcd_Set_Cursor
   924                           
   925                           ;main.c: 87: Lcd_Write_Char('e');
   926  07E8  3065               	movlw	101
   927  07E9  3186  2678  3187   	fcall	_Lcd_Write_Char
   928                           
   929                           ;main.c: 88: Lcd_Write_Char('S');
   930  07EC  3053               	movlw	83
   931  07ED  3186  2678  3187   	fcall	_Lcd_Write_Char
   932                           
   933                           ;main.c: 89: _delay((unsigned long)((2000)*(16000000/4000.0)));
   934  07F0  3029               	movlw	41
   935  07F1  00FB               	movwf	??_main+1
   936  07F2  3096               	movlw	150
   937  07F3  00FA               	movwf	??_main
   938  07F4  307F               	movlw	127
   939  07F5                     u287:	
   940  07F5  0B89               	decfsz	9,f
   941  07F6  2FF5               	goto	u287
   942  07F7  0BFA               	decfsz	??_main,f
   943  07F8  2FF5               	goto	u287
   944  07F9  0BFB               	decfsz	??_main+1,f
   945  07FA  2FF5               	goto	u287
   946  07FB  0000               	nop
   947  07FC  2F37               	goto	l753
   948  07FD                     __end_of_main:	
   949                           ;main.c: 90: }
   950                           ;main.c: 91: return 0;
   951                           ;	Return value of _main is never used
   952                           
   953                           
   954                           	psect	text1
   955  065E                     __ptext1:	
   956 ;; *************** function _Lcd_Write_String *****************
   957 ;; Defined at:
   958 ;;		line 97 in file "sources/lcd.h"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  a               2    5[COMMON] PTR unsigned char 
   961 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(4), 
   962 ;;		 -> STR_1(17), 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  i               2    8[COMMON] int 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   978 ;;Total ram usage:        5 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    2
   981 ;; This function calls:
   982 ;;		_Lcd_Write_Char
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _Lcd_Write_String
   990  065E                     _Lcd_Write_String:	
   991                           
   992                           ;lcd.h: 99: int i;
   993                           ;lcd.h: 100: for(i=0;a[i]!='\0';i++)
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   997  065E  01F8               	clrf	Lcd_Write_String@i
   998  065F  01F9               	clrf	Lcd_Write_String@i+1
   999  0660                     l735:	
  1000  0660  0875               	movf	Lcd_Write_String@a,w
  1001  0661  0778               	addwf	Lcd_Write_String@i,w
  1002  0662  0084               	movwf	4
  1003  0663  0876               	movf	Lcd_Write_String@a+1,w
  1004  0664  3D79               	addwfc	Lcd_Write_String@i+1,w
  1005  0665  0085               	movwf	5
  1006  0666  0012               	moviw fsr0++
  1007  0667  1903               	btfsc	3,2
  1008  0668  0008               	return
  1009                           
  1010                           ;lcd.h: 101: Lcd_Write_Char(a[i]);
  1011  0669  0875               	movf	Lcd_Write_String@a,w
  1012  066A  0778               	addwf	Lcd_Write_String@i,w
  1013  066B  0084               	movwf	4
  1014  066C  0876               	movf	Lcd_Write_String@a+1,w
  1015  066D  3D79               	addwfc	Lcd_Write_String@i+1,w
  1016  066E  0085               	movwf	5
  1017  066F  0800               	movf	0,w	;code access
  1018  0670  3186  2678  3186   	fcall	_Lcd_Write_Char
  1019  0673  3001               	movlw	1
  1020  0674  07F8               	addwf	Lcd_Write_String@i,f
  1021  0675  3000               	movlw	0
  1022  0676  3DF9               	addwfc	Lcd_Write_String@i+1,f
  1023  0677  2E60               	goto	l735
  1024  0678                     __end_of_Lcd_Write_String:	
  1025                           
  1026                           	psect	text2
  1027  0678                     __ptext2:	
  1028 ;; *************** function _Lcd_Write_Char *****************
  1029 ;; Defined at:
  1030 ;;		line 81 in file "sources/lcd.h"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  a               1    wreg     unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  a               1    4[COMMON] unsigned char 
  1035 ;;  y               1    3[COMMON] unsigned char 
  1036 ;;  temp            1    2[COMMON] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1047 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;Total ram usage:        4 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    1
  1053 ;; This function calls:
  1054 ;;		_Lcd_Port
  1055 ;; This function is called by:
  1056 ;;		_Lcd_Write_String
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _Lcd_Write_Char
  1063  0678                     _Lcd_Write_Char:	
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1067                           ;Lcd_Write_Char@a stored from wreg
  1068  0678  00F4               	movwf	Lcd_Write_Char@a
  1069                           
  1070                           ;lcd.h: 83: char temp,y;
  1071                           ;lcd.h: 84: temp = a&0x0F;
  1072  0679  0874               	movf	Lcd_Write_Char@a,w
  1073  067A  390F               	andlw	15
  1074  067B  00F1               	movwf	??_Lcd_Write_Char
  1075  067C  0871               	movf	??_Lcd_Write_Char,w
  1076  067D  00F2               	movwf	Lcd_Write_Char@temp
  1077                           
  1078                           ;lcd.h: 85: y = a&0xF0;
  1079  067E  0874               	movf	Lcd_Write_Char@a,w
  1080  067F  39F0               	andlw	240
  1081  0680  00F1               	movwf	??_Lcd_Write_Char
  1082  0681  0871               	movf	??_Lcd_Write_Char,w
  1083  0682  00F3               	movwf	Lcd_Write_Char@y
  1084                           
  1085                           ;lcd.h: 86: RB6 = 1;
  1086  0683  0020               	movlb	0	; select bank0
  1087  0684  170D               	bsf	13,6	;volatile
  1088                           
  1089                           ;lcd.h: 87: Lcd_Port(y>>4);
  1090  0685  0873               	movf	Lcd_Write_Char@y,w
  1091  0686  00F1               	movwf	??_Lcd_Write_Char
  1092  0687  3004               	movlw	4
  1093  0688                     u55:	
  1094  0688  36F1               	lsrf	??_Lcd_Write_Char,f
  1095  0689  0B89               	decfsz	9,f
  1096  068A  2E88               	goto	u55
  1097  068B  0871               	movf	??_Lcd_Write_Char,w
  1098  068C  3186  2646  3186   	fcall	_Lcd_Port
  1099                           
  1100                           ;lcd.h: 88: RB5 = 1;
  1101  068F  0020               	movlb	0	; select bank0
  1102  0690  168D               	bsf	13,5	;volatile
  1103                           
  1104                           ;lcd.h: 89: _delay((unsigned long)((40)*(16000000/4000000.0)));
  1105  0691  3035               	movlw	53
  1106  0692                     u297:	
  1107  0692  0B89               	decfsz	9,f
  1108  0693  2E92               	goto	u297
  1109  0694  0000               	nop
  1110                           
  1111                           ;lcd.h: 90: RB5 = 0;
  1112  0695  0020               	movlb	0	; select bank0
  1113  0696  128D               	bcf	13,5	;volatile
  1114                           
  1115                           ;lcd.h: 91: Lcd_Port(temp);
  1116  0697  0872               	movf	Lcd_Write_Char@temp,w
  1117  0698  3186  2646  3186   	fcall	_Lcd_Port
  1118                           
  1119                           ;lcd.h: 92: RB5 = 1;
  1120  069B  0020               	movlb	0	; select bank0
  1121  069C  168D               	bsf	13,5	;volatile
  1122                           
  1123                           ;lcd.h: 93: _delay((unsigned long)((40)*(16000000/4000000.0)));
  1124  069D  3035               	movlw	53
  1125  069E                     u307:	
  1126  069E  0B89               	decfsz	9,f
  1127  069F  2E9E               	goto	u307
  1128  06A0  0000               	nop
  1129                           
  1130                           ;lcd.h: 94: RB5 = 0;
  1131  06A1  0020               	movlb	0	; select bank0
  1132  06A2  128D               	bcf	13,5	;volatile
  1133  06A3  0008               	return
  1134  06A4                     __end_of_Lcd_Write_Char:	
  1135                           
  1136                           	psect	text3
  1137  062A                     __ptext3:	
  1138 ;; *************** function _Lcd_Shift_Right *****************
  1139 ;; Defined at:
  1140 ;;		line 104 in file "sources/lcd.h"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, pclath, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    2
  1161 ;; This function calls:
  1162 ;;		_Lcd_Cmd
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _Lcd_Shift_Right
  1170  062A                     _Lcd_Shift_Right:	
  1171                           
  1172                           ;lcd.h: 106: Lcd_Cmd(0x01);
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1176  062A  3001               	movlw	1
  1177  062B  3186  2632  3186   	fcall	_Lcd_Cmd
  1178                           
  1179                           ;lcd.h: 107: Lcd_Cmd(0x0C);
  1180  062E  300C               	movlw	12
  1181  062F  3186  2632         	fcall	_Lcd_Cmd
  1182  0631  0008               	return
  1183  0632                     __end_of_Lcd_Shift_Right:	
  1184                           
  1185                           	psect	text4
  1186  0622                     __ptext4:	
  1187 ;; *************** function _Lcd_Shift_Left *****************
  1188 ;; Defined at:
  1189 ;;		line 110 in file "sources/lcd.h"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0, pclath, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1207 ;;Total ram usage:        0 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    2
  1210 ;; This function calls:
  1211 ;;		_Lcd_Cmd
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function _Lcd_Shift_Left
  1219  0622                     _Lcd_Shift_Left:	
  1220                           
  1221                           ;lcd.h: 112: Lcd_Cmd(0x01);
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1225  0622  3001               	movlw	1
  1226  0623  3186  2632  3186   	fcall	_Lcd_Cmd
  1227                           
  1228                           ;lcd.h: 113: Lcd_Cmd(0x08);
  1229  0626  3008               	movlw	8
  1230  0627  3186  2632         	fcall	_Lcd_Cmd
  1231  0629  0008               	return
  1232  062A                     __end_of_Lcd_Shift_Left:	
  1233                           
  1234                           	psect	text5
  1235  06A4                     __ptext5:	
  1236 ;; *************** function _Lcd_Set_Cursor *****************
  1237 ;; Defined at:
  1238 ;;		line 41 in file "sources/lcd.h"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  a               1    wreg     unsigned char 
  1241 ;;  b               1    3[COMMON] unsigned char 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  a               1    6[COMMON] unsigned char 
  1244 ;;  temp            1    9[COMMON] unsigned char 
  1245 ;;  y               1    8[COMMON] unsigned char 
  1246 ;;  z               1    7[COMMON] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, pclath, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1256 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1259 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1260 ;;Total ram usage:        7 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    2
  1263 ;; This function calls:
  1264 ;;		_Lcd_Cmd
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _Lcd_Set_Cursor
  1272  06A4                     _Lcd_Set_Cursor:	
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1276                           ;Lcd_Set_Cursor@a stored from wreg
  1277  06A4  00F6               	movwf	Lcd_Set_Cursor@a
  1278                           
  1279                           ;lcd.h: 43: char temp,z,y;
  1280                           ;lcd.h: 44: if(a == 1)
  1281  06A5  0376               	decf	Lcd_Set_Cursor@a,w
  1282  06A6  1D03               	btfss	3,2
  1283  06A7  2EC4               	goto	l719
  1284                           
  1285                           ;lcd.h: 45: {
  1286                           ;lcd.h: 46: temp = 0x80 + b - 1;
  1287  06A8  0873               	movf	Lcd_Set_Cursor@b,w
  1288  06A9  3E7F               	addlw	127
  1289  06AA  00F4               	movwf	??_Lcd_Set_Cursor
  1290  06AB  0874               	movf	??_Lcd_Set_Cursor,w
  1291  06AC  00F9               	movwf	Lcd_Set_Cursor@temp
  1292                           
  1293                           ;lcd.h: 47: z = temp>>4;
  1294  06AD  0879               	movf	Lcd_Set_Cursor@temp,w
  1295  06AE  00F4               	movwf	??_Lcd_Set_Cursor
  1296  06AF  3004               	movlw	4
  1297  06B0                     u165:	
  1298  06B0  36F4               	lsrf	??_Lcd_Set_Cursor,f
  1299  06B1  0B89               	decfsz	9,f
  1300  06B2  2EB0               	goto	u165
  1301  06B3  0874               	movf	??_Lcd_Set_Cursor,w
  1302  06B4  00F5               	movwf	??_Lcd_Set_Cursor+1
  1303  06B5  0875               	movf	??_Lcd_Set_Cursor+1,w
  1304  06B6  00F7               	movwf	Lcd_Set_Cursor@z
  1305                           
  1306                           ;lcd.h: 48: y = temp & 0x0F;
  1307  06B7  0879               	movf	Lcd_Set_Cursor@temp,w
  1308  06B8  390F               	andlw	15
  1309  06B9  00F4               	movwf	??_Lcd_Set_Cursor
  1310  06BA  0874               	movf	??_Lcd_Set_Cursor,w
  1311  06BB  00F8               	movwf	Lcd_Set_Cursor@y
  1312                           
  1313                           ;lcd.h: 49: Lcd_Cmd(z);
  1314  06BC  0877               	movf	Lcd_Set_Cursor@z,w
  1315  06BD  3186  2632  3186   	fcall	_Lcd_Cmd
  1316                           
  1317                           ;lcd.h: 50: Lcd_Cmd(y);
  1318  06C0  0878               	movf	Lcd_Set_Cursor@y,w
  1319  06C1  3186  2632         	fcall	_Lcd_Cmd
  1320                           
  1321                           ;lcd.h: 51: }
  1322  06C3  0008               	return
  1323  06C4                     l719:	
  1324                           
  1325                           ;lcd.h: 52: else if(a == 2)
  1326  06C4  3002               	movlw	2
  1327  06C5  0676               	xorwf	Lcd_Set_Cursor@a,w
  1328  06C6  1D03               	btfss	3,2
  1329  06C7  0008               	return
  1330                           
  1331                           ;lcd.h: 53: {
  1332                           ;lcd.h: 54: temp = 0xC0 + b - 1;
  1333  06C8  0873               	movf	Lcd_Set_Cursor@b,w
  1334  06C9  3EBF               	addlw	191
  1335  06CA  00F4               	movwf	??_Lcd_Set_Cursor
  1336  06CB  0874               	movf	??_Lcd_Set_Cursor,w
  1337  06CC  00F9               	movwf	Lcd_Set_Cursor@temp
  1338                           
  1339                           ;lcd.h: 55: z = temp>>4;
  1340  06CD  0879               	movf	Lcd_Set_Cursor@temp,w
  1341  06CE  00F4               	movwf	??_Lcd_Set_Cursor
  1342  06CF  3004               	movlw	4
  1343  06D0                     u185:	
  1344  06D0  36F4               	lsrf	??_Lcd_Set_Cursor,f
  1345  06D1  0B89               	decfsz	9,f
  1346  06D2  2ED0               	goto	u185
  1347  06D3  0874               	movf	??_Lcd_Set_Cursor,w
  1348  06D4  00F5               	movwf	??_Lcd_Set_Cursor+1
  1349  06D5  0875               	movf	??_Lcd_Set_Cursor+1,w
  1350  06D6  00F7               	movwf	Lcd_Set_Cursor@z
  1351                           
  1352                           ;lcd.h: 56: y = temp & 0x0F;
  1353  06D7  0879               	movf	Lcd_Set_Cursor@temp,w
  1354  06D8  390F               	andlw	15
  1355  06D9  00F4               	movwf	??_Lcd_Set_Cursor
  1356  06DA  0874               	movf	??_Lcd_Set_Cursor,w
  1357  06DB  00F8               	movwf	Lcd_Set_Cursor@y
  1358                           
  1359                           ;lcd.h: 57: Lcd_Cmd(z);
  1360  06DC  0877               	movf	Lcd_Set_Cursor@z,w
  1361  06DD  3186  2632  3186   	fcall	_Lcd_Cmd
  1362                           
  1363                           ;lcd.h: 58: Lcd_Cmd(y);
  1364  06E0  0878               	movf	Lcd_Set_Cursor@y,w
  1365  06E1  3186  2632         	fcall	_Lcd_Cmd
  1366  06E3  0008               	return
  1367  06E4                     __end_of_Lcd_Set_Cursor:	
  1368                           
  1369                           	psect	text6
  1370  06E4                     __ptext6:	
  1371 ;; *************** function _Lcd_Init *****************
  1372 ;; Defined at:
  1373 ;;		line 62 in file "sources/lcd.h"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    2
  1394 ;; This function calls:
  1395 ;;		_Lcd_Cmd
  1396 ;;		_Lcd_Port
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _Lcd_Init
  1404  06E4                     _Lcd_Init:	
  1405                           
  1406                           ;lcd.h: 64: Lcd_Port(0x00);
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1410  06E4  3000               	movlw	0
  1411  06E5  3186  2646  3186   	fcall	_Lcd_Port
  1412                           
  1413                           ;lcd.h: 65: _delay((unsigned long)((20)*(16000000/4000.0)));
  1414  06E8  3068               	movlw	104
  1415  06E9  00F3               	movwf	??_Lcd_Init
  1416  06EA  30E4               	movlw	228
  1417  06EB                     u317:	
  1418  06EB  0B89               	decfsz	9,f
  1419  06EC  2EEB               	goto	u317
  1420  06ED  0BF3               	decfsz	??_Lcd_Init,f
  1421  06EE  2EEB               	goto	u317
  1422  06EF  3200               	nop2
  1423                           
  1424                           ;lcd.h: 66: Lcd_Cmd(0x03);
  1425  06F0  3003               	movlw	3
  1426  06F1  3186  2632  3186   	fcall	_Lcd_Cmd
  1427                           
  1428                           ;lcd.h: 67: _delay((unsigned long)((5)*(16000000/4000.0)));
  1429  06F4  301A               	movlw	26
  1430  06F5  00F3               	movwf	??_Lcd_Init
  1431  06F6  30F8               	movlw	248
  1432  06F7                     u327:	
  1433  06F7  0B89               	decfsz	9,f
  1434  06F8  2EF7               	goto	u327
  1435  06F9  0BF3               	decfsz	??_Lcd_Init,f
  1436  06FA  2EF7               	goto	u327
  1437  06FB  3200               	nop2
  1438                           
  1439                           ;lcd.h: 68: Lcd_Cmd(0x03);
  1440  06FC  3003               	movlw	3
  1441  06FD  3186  2632  3186   	fcall	_Lcd_Cmd
  1442                           
  1443                           ;lcd.h: 69: _delay((unsigned long)((11)*(16000000/4000.0)));
  1444  0700  303A               	movlw	58
  1445  0701  00F3               	movwf	??_Lcd_Init
  1446  0702  3023               	movlw	35
  1447  0703                     u337:	
  1448  0703  0B89               	decfsz	9,f
  1449  0704  2F03               	goto	u337
  1450  0705  0BF3               	decfsz	??_Lcd_Init,f
  1451  0706  2F03               	goto	u337
  1452  0707  0000               	nop
  1453                           
  1454                           ;lcd.h: 70: Lcd_Cmd(0x03);
  1455  0708  3003               	movlw	3
  1456  0709  3186  2632  3186   	fcall	_Lcd_Cmd
  1457                           
  1458                           ;lcd.h: 72: Lcd_Cmd(0x02);
  1459  070C  3002               	movlw	2
  1460  070D  3186  2632  3186   	fcall	_Lcd_Cmd
  1461                           
  1462                           ;lcd.h: 73: Lcd_Cmd(0x02);
  1463  0710  3002               	movlw	2
  1464  0711  3186  2632  3186   	fcall	_Lcd_Cmd
  1465                           
  1466                           ;lcd.h: 74: Lcd_Cmd(0x08);
  1467  0714  3008               	movlw	8
  1468  0715  3186  2632  3186   	fcall	_Lcd_Cmd
  1469                           
  1470                           ;lcd.h: 75: Lcd_Cmd(0x00);
  1471  0718  3000               	movlw	0
  1472  0719  3186  2632  3186   	fcall	_Lcd_Cmd
  1473                           
  1474                           ;lcd.h: 76: Lcd_Cmd(0x0C);
  1475  071C  300C               	movlw	12
  1476  071D  3186  2632  3186   	fcall	_Lcd_Cmd
  1477                           
  1478                           ;lcd.h: 77: Lcd_Cmd(0x00);
  1479  0720  3000               	movlw	0
  1480  0721  3186  2632  3186   	fcall	_Lcd_Cmd
  1481                           
  1482                           ;lcd.h: 78: Lcd_Cmd(0x06);
  1483  0724  3006               	movlw	6
  1484  0725  3186  2632         	fcall	_Lcd_Cmd
  1485  0727  0008               	return
  1486  0728                     __end_of_Lcd_Init:	
  1487                           
  1488                           	psect	text7
  1489  061A                     __ptext7:	
  1490 ;; *************** function _Lcd_Clear *****************
  1491 ;; Defined at:
  1492 ;;		line 35 in file "sources/lcd.h"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  2   46[None  ] int 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, pclath, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    2
  1513 ;; This function calls:
  1514 ;;		_Lcd_Cmd
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _Lcd_Clear
  1522  061A                     _Lcd_Clear:	
  1523                           
  1524                           ;lcd.h: 37: Lcd_Cmd(0);
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1528  061A  3000               	movlw	0
  1529  061B  3186  2632  3186   	fcall	_Lcd_Cmd
  1530                           
  1531                           ;lcd.h: 38: Lcd_Cmd(1);
  1532  061E  3001               	movlw	1
  1533  061F  3186  2632         	fcall	_Lcd_Cmd
  1534  0621  0008               	return
  1535  0622                     __end_of_Lcd_Clear:	
  1536                           
  1537                           	psect	text8
  1538  0632                     __ptext8:	
  1539 ;; *************** function _Lcd_Cmd *****************
  1540 ;; Defined at:
  1541 ;;		line 26 in file "sources/lcd.h"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  a               1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  a               1    2[COMMON] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;Total ram usage:        2 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    1
  1562 ;; This function calls:
  1563 ;;		_Lcd_Port
  1564 ;; This function is called by:
  1565 ;;		_Lcd_Clear
  1566 ;;		_Lcd_Set_Cursor
  1567 ;;		_Lcd_Init
  1568 ;;		_Lcd_Shift_Right
  1569 ;;		_Lcd_Shift_Left
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _Lcd_Cmd
  1575  0632                     _Lcd_Cmd:	
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1579                           ;Lcd_Cmd@a stored from wreg
  1580  0632  00F2               	movwf	Lcd_Cmd@a
  1581                           
  1582                           ;lcd.h: 28: RB6 = 0;
  1583  0633  0020               	movlb	0	; select bank0
  1584  0634  130D               	bcf	13,6	;volatile
  1585                           
  1586                           ;lcd.h: 29: Lcd_Port(a);
  1587  0635  0872               	movf	Lcd_Cmd@a,w
  1588  0636  3186  2646  3186   	fcall	_Lcd_Port
  1589                           
  1590                           ;lcd.h: 30: RB5 = 1;
  1591  0639  0020               	movlb	0	; select bank0
  1592  063A  168D               	bsf	13,5	;volatile
  1593                           
  1594                           ;lcd.h: 31: _delay((unsigned long)((4)*(16000000/4000.0)));
  1595  063B  3015               	movlw	21
  1596  063C  00F1               	movwf	??_Lcd_Cmd
  1597  063D  30C6               	movlw	198
  1598  063E                     u347:	
  1599  063E  0B89               	decfsz	9,f
  1600  063F  2E3E               	goto	u347
  1601  0640  0BF1               	decfsz	??_Lcd_Cmd,f
  1602  0641  2E3E               	goto	u347
  1603  0642  3200               	nop2
  1604                           
  1605                           ;lcd.h: 32: RB5 = 0;
  1606  0643  0020               	movlb	0	; select bank0
  1607  0644  128D               	bcf	13,5	;volatile
  1608  0645  0008               	return
  1609  0646                     __end_of_Lcd_Cmd:	
  1610                           
  1611                           	psect	text9
  1612  0646                     __ptext9:	
  1613 ;; *************** function _Lcd_Port *****************
  1614 ;; Defined at:
  1615 ;;		line 4 in file "sources/lcd.h"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  a               1    wreg     unsigned char 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  a               1    0[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1633 ;;Total ram usage:        1 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_Lcd_Cmd
  1639 ;;		_Lcd_Init
  1640 ;;		_Lcd_Write_Char
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _Lcd_Port
  1646  0646                     _Lcd_Port:	
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _Lcd_Port: [wreg]
  1650                           ;Lcd_Port@a stored from wreg
  1651  0646  00F0               	movwf	Lcd_Port@a
  1652                           
  1653                           ;lcd.h: 6: if(a & 1)
  1654  0647  1C70               	btfss	Lcd_Port@a,0
  1655  0648  2E4C               	goto	l33
  1656                           
  1657                           ;lcd.h: 7: RC4 = 1;
  1658  0649  0020               	movlb	0	; select bank0
  1659  064A  160E               	bsf	14,4	;volatile
  1660  064B  2E4E               	goto	l545
  1661  064C                     l33:	
  1662                           
  1663                           ;lcd.h: 8: else
  1664                           ;lcd.h: 9: RC4 = 0;
  1665  064C  0020               	movlb	0	; select bank0
  1666  064D  120E               	bcf	14,4	;volatile
  1667  064E                     l545:	
  1668                           
  1669                           ;lcd.h: 11: if(a & 2)
  1670  064E  1CF0               	btfss	Lcd_Port@a,1
  1671  064F  2E52               	goto	l35
  1672                           
  1673                           ;lcd.h: 12: RC5 = 1;
  1674  0650  168E               	bsf	14,5	;volatile
  1675  0651  2E53               	goto	l549
  1676  0652                     l35:	
  1677                           
  1678                           ;lcd.h: 13: else
  1679                           ;lcd.h: 14: RC5 = 0;
  1680  0652  128E               	bcf	14,5	;volatile
  1681  0653                     l549:	
  1682                           
  1683                           ;lcd.h: 16: if(a & 4)
  1684  0653  1D70               	btfss	Lcd_Port@a,2
  1685  0654  2E57               	goto	l37
  1686                           
  1687                           ;lcd.h: 17: RC6 = 1;
  1688  0655  170E               	bsf	14,6	;volatile
  1689  0656  2E58               	goto	l553
  1690  0657                     l37:	
  1691                           
  1692                           ;lcd.h: 18: else
  1693                           ;lcd.h: 19: RC6 = 0;
  1694  0657  130E               	bcf	14,6	;volatile
  1695  0658                     l553:	
  1696                           
  1697                           ;lcd.h: 21: if(a & 8)
  1698  0658  1DF0               	btfss	Lcd_Port@a,3
  1699  0659  2E5C               	goto	l39
  1700                           
  1701                           ;lcd.h: 22: RC7 = 1;
  1702  065A  178E               	bsf	14,7	;volatile
  1703  065B  0008               	return
  1704  065C                     l39:	
  1705                           
  1706                           ;lcd.h: 23: else
  1707                           ;lcd.h: 24: RC7 = 0;
  1708  065C  138E               	bcf	14,7	;volatile
  1709  065D  0008               	return
  1710  065E                     __end_of_Lcd_Port:	
  1711  007E                     btemp	set	126	;btemp
  1712  007E                     wtemp0	set	126


Data Sizes:
    Strings     66
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[4]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1710
                                             10 COMMON     4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     475
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     663
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     135
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
<<<<<<< Updated upstream
Symbol Table                                                                                   Sun Jul 30 10:20:52 2017
=======
Symbol Table                                                                                   Sun Jul 30 10:31:58 2017
>>>>>>> Stashed changes

              __CFG_CP$OFF 0000                         l33 064C                         l35 0652  
                       l37 0657                         l39 065C                         u55 0688  
              __CFG_LVP$ON 0000                        l553 0658                        l545 064E  
                      l811 07DF                        l803 07C5                        l549 0653  
                      l719 06C4                        l735 0660                        l753 0737  
                      l797 07BC                        l789 07A2                        _RB5 006D  
                      _RC4 0074                        _RB6 006E                        _RC5 0075  
                      _RC6 0076                        _RC7 0077                        u307 069E  
                      u317 06EB                        u165 06B0                        u327 06F7  
                      u247 0759                        u337 0703                        u185 06D0  
                      u257 0782               __CFG_CPD$OFF 0000                        u347 063E  
                      u267 07A7                        u277 07CA                        u287 07F5  
                      u297 0692                        wreg 0009                       STR_1 0814  
                     STR_2 083E                       STR_3 0825                       STR_4 0832  
                     STR_5 0800               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
        ?_Lcd_Write_String 0075                       _main 0728                       fsr0h 0005  
                     indf0 0000                       fsr0l 0004                       btemp 007E  
            __CFG_BOREN$ON 0000              __CFG_BORV$LOW 0000                       start 0002  
       ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 0646              __CFG_CSWEN$ON 0000  
            __CFG_MCLRE$ON 0000                      ?_main 0070              __CFG_WDTE$OFF 0000  
                    _ANSB5 0C6D                      _ANSC4 0C74                      _ANSB6 0C6E  
                    _ANSC5 0C75                      _ANSC6 0C76                      _ANSC7 0C77  
           __CFG_DEBUG$OFF 0000    __size_of_Lcd_Set_Cursor 0040                      _TRISB 008D  
                    _TRISC 008E    __size_of_Lcd_Shift_Left 0008                      main@a 007C  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0728  
         __end_of_Lcd_Port 065E            __initialization 07FD               __end_of_main 07FD  
                   ??_main 007A         __size_of_Lcd_Clear 0008                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 002C             __CFG_PWRTE$OFF 0000             __CFG_STVREN$ON 0000  
 __size_of_Lcd_Shift_Right 0008            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0073  
          Lcd_Set_Cursor@y 0078            Lcd_Set_Cursor@z 0077    __end_of__initialization 07FD  
          __CFG_FEXTOSC$HS 0000          __end_of_Lcd_Clear 0622             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 06A4             _Lcd_Shift_Left 0622                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 0728            __CFG_PPS1WAY$ON 0000  
__size_of_Lcd_Write_String 001A     __end_of_Lcd_Set_Cursor 06E4     __end_of_Lcd_Shift_Left 062A  
        ??_Lcd_Shift_Right 0073                 ??_Lcd_Init 0073                 ??_Lcd_Port 0070  
           _Lcd_Write_Char 0678                    _Lcd_Cmd 0632            ?_Lcd_Set_Cursor 0073  
                  __ptext1 065E                    __ptext2 0678                    __ptext3 062A  
                  __ptext4 0622                    __ptext5 06A4                    __ptext6 06E4  
                  __ptext7 061A                    __ptext8 0632                    __ptext9 0646  
          ?_Lcd_Shift_Left 0070     __end_of_Lcd_Write_Char 06A4       end_of_initialization 07FD  
                Lcd_Port@a 0070            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0078                  _Lcd_Clear 061A           _Lcd_Write_String 065E  
      start_initialization 07FD          __size_of_Lcd_Init 0044          __size_of_Lcd_Port 0018  
        __CFG_RSTOSC$EXT1X 0000           __CFG_LPBOREN$OFF 0000                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 062A            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0074  
         ??_Lcd_Shift_Left 0073    __end_of_Lcd_Shift_Right 0632                   Lcd_Cmd@a 0072  
              ??_Lcd_Clear 0073           ??_Lcd_Write_Char 0071                   _Lcd_Init 06E4  
                 _Lcd_Port 0646   __end_of_Lcd_Write_String 0678           __size_of_Lcd_Cmd 0014  
            __size_of_main 00D5           ?_Lcd_Shift_Right 0070         Lcd_Write_Char@temp 0072  
        __CFG_CLKOUTEN$OFF 0000         Lcd_Set_Cursor@temp 0079              __pstringtext1 0800  
            __pstringtext2 0814              __pstringtext3 0825              __pstringtext4 0832  
            __pstringtext5 083E              __pstringtext6 0000  
